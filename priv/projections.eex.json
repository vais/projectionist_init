{
  "lib/<%= app_underscored %>/*.ex": {
    "type": "app",
    "alternate": "test/<%= app_underscored %>/{}_test.exs",
    "template": [
      "defmodule <%= app_camelized %>.<%= glob_modulized %> do",
      "end"
    ]
  },

  "test/<%= app_underscored %>/*_test.exs": {
    "type": "test-app",
    "alternate": "lib/<%= app_underscored %>/{}.ex",
    "template": [
      "defmodule <%= app_camelized %>.<%= glob_modulized %>Test do",
      "  use ExUnit.Case, async: true",
      "",
      "  alias <%= app_camelized %>.<%= glob_modulized %>",
      "end"
    ]
  },

  "lib/<%= app_underscored %>_web/controllers/*_controller.ex": {
    "type": "controller",
    "alternate": "test/<%= app_underscored %>_web/controllers/{}_controller_test.exs",
    "template": [
      "defmodule <%= app_camelized %>Web.<%= glob_modulized %>Controller do",
      "  use <%= app_camelized %>Web, :controller",
      "end"
    ]
  },

  "test/<%= app_underscored %>_web/controllers/*_controller_test.exs": {
    "type": "test-controller",
    "alternate": "lib/<%= app_underscored %>_web/controllers/{}_controller.ex",
    "template": [
      "defmodule <%= app_camelized %>Web.<%= glob_modulized %>ControllerTest do",
      "  use <%= app_camelized %>Web.ConnCase, async: true",
      "end"
    ]
  },

  "lib/<%= app_underscored %>_web/controllers/*_html.ex": {
    "type": "html",
    "alternate": "test/<%= app_underscored %>_web/controllers/{}_html_test.exs",
    "template": [
      "defmodule <%= app_camelized %>Web.<%= glob_modulized %>HTML do",
      "  use <%= app_camelized %>Web, :html",
      "end"
    ]
  },

  "test/<%= app_underscored %>_web/controllers/*_html_test.exs": {
    "type": "test-html",
    "alternate": "lib/<%= app_underscored %>_web/controllers/{}_html.ex",
    "template": [
      "defmodule <%= app_camelized %>Web.<%= glob_modulized %>HTMLTest do",
      "  use <%= app_camelized %>Web.ConnCase, async: true",
      "",
      "  alias <%= app_camelized %>Web.<%= glob_modulized %>HTML",
      "end"
    ]
  },

  "lib/<%= app_underscored %>_web/channels/*_channel.ex": {
    "type": "channel",
    "alternate": "test/<%= app_underscored %>_web/channels/{}_channel_test.exs",
    "template": [
      "defmodule <%= app_camelized %>Web.<%= glob_modulized %>Channel do",
      "  use <%= app_camelized %>Web, :channel",
      "end"
    ]
  },

  "test/<%= app_underscored %>_web/channels/*_channel_test.exs": {
    "type": "test-channel",
    "alternate": "lib/<%= app_underscored %>_web/channels/{}_channel.ex",
    "template": [
      "defmodule <%= app_camelized %>Web.<%= glob_modulized %>ChannelTest do",
      "  use <%= app_camelized %>Web.ChannelCase, async: true",
      "",
      "  alias <%= app_camelized %>Web.<%= glob_modulized %>Channel",
      "end"
    ]
  },

  "lib/<%= app_underscored %>_web/live/*.ex": {
    "type": "live",
    "alternate": "test/<%= app_underscored %>_web/live/{}_test.exs",
    "template": [
      "defmodule <%= app_camelized %>Web.<%= glob_modulized %> do",
      "  use <%= app_camelized %>Web, :live_view",
      "",
      "  def render(assigns) do",
      "    ~H\"\"\"",
      "    \"\"\"",
      "  end",
      "end"
    ]
  },

  "test/<%= app_underscored %>_web/live/*_test.exs": {
    "type": "test-live",
    "alternate": "lib/<%= app_underscored %>_web/live/{}.ex",
    "template": [
      "defmodule <%= app_camelized %>Web.<%= glob_modulized %>Test do",
      "  use <%= app_camelized %>Web.ConnCase, async: true",
      "",
      "  import Phoenix.LiveViewTest",
      "",
      "  test \"\", %{open}conn: conn{close} do",
      "    {open}:ok, view, _html{close} = live(conn, ~p\"\")",
      "  end",
      "end"
    ]
  },

  "lib/<%= app_underscored %>_web/components/*_component.ex": {
    "type": "component",
    "alternate": "test/<%= app_underscored %>_web/components/{}_component_test.exs",
    "template": [
      "defmodule <%= app_camelized %>Web.<%= glob_modulized %>Component do",
      "  use Phoenix.Component",
      "end"
    ]
  },

  "test/<%= app_underscored %>_web/components/*_component_test.exs": {
    "type": "test-component",
    "alternate": "lib/<%= app_underscored %>_web/components/{}_component.ex",
    "template": [
      "defmodule <%= app_camelized %>Web.<%= glob_modulized %>ComponentTest do",
      "  use ExUnit.Case, async: true",
      "",
      "  import Phoenix.LiveViewTest",
      "  import Phoenix.Component, only: [sigil_H: 2]",
      "  import <%= app_camelized %>Web.<%= glob_modulized %>Component",
      "end"
    ]
  },

  "lib/<%= app_underscored %>_web/components/*_components.ex": {
    "type": "components",
    "alternate": "test/<%= app_underscored %>_web/components/{}_components_test.exs",
    "template": [
      "defmodule <%= app_camelized %>Web.<%= glob_modulized %>Components do",
      "  use Phoenix.Component",
      "end"
    ]
  },

  "test/<%= app_underscored %>_web/components/*_components_test.exs": {
    "type": "test-components",
    "alternate": "lib/<%= app_underscored %>_web/components/{}_components.ex",
    "template": [
      "defmodule <%= app_camelized %>Web.<%= glob_modulized %>ComponentsTest do",
      "  use ExUnit.Case, async: true",
      "",
      "  import Phoenix.LiveViewTest",
      "  import Phoenix.Component, only: [sigil_H: 2]",
      "  import <%= app_camelized %>Web.<%= glob_modulized %>Components",
      "end"
    ]
  },

  "test/<%= app_underscored %>_web/features/*_test.exs": {
    "type": "feature",
    "template": [
      "defmodule <%= app_camelized %>Web.<%= glob_modulized %>Test do",
      "  use <%= app_camelized %>Web.FeatureCase, async: true",
      "end"
    ]
  },

  "lib/*.ex": {
    "type": "source",
    "alternate": "test/{}_test.exs",
    "template": [
      "defmodule <%= glob_modulized %> do",
      "end"
    ]
  },

  "test/*_test.exs": {
    "type": "test",
    "alternate": "lib/{}.ex",
    "template": [
      "defmodule <%= glob_modulized %>Test do",
      "  use ExUnit.Case, async: true",
      "",
      "  alias <%= glob_modulized %>",
      "end"
    ]
  }
}
